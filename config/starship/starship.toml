add_newline = false
# A minimal left prompt
# format = """$directory$character"""
palette = "catppuccin_macchiato"
# Left prompt with important information
format = """
$username\
$hostname\
$directory\
$git_branch\
$git_state\
$git_status\
$git_metrics\
$fill\
$nodejs\
$cmd_duration $jobs $time\
$line_break\
$character"""

# move the rest of the prompt to the right
right_format = """$all"""

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# pyenv takes a while
command_timeout = 1000

[nodejs]
format = "[$symbol($version )]($style)"

[fill]
symbol = " "

[directory]
read_only = " "
truncation_length = 4
truncate_to_repo = false

[character]
success_symbol = "[❯](purple)"
error_symbol = "[❯](red)"
vicmd_symbol = "[❮](green)"

[git_branch]
symbol = " "
format = "[$symbol$branch]($style) "

[jobs]
symbol = ""
number_threshold = 1
format = "[$symbol]($style)"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'

[git_state]
format = '[\($state( $progress_current/$progress_total)\)]($style) '

[git_metrics]
disabled = false

[cmd_duration]
format = "[$duration]($style)"

[memory_usage]
symbol = " "

[rust]
symbol = " "

[time]
disabled = false
format = "[$time]($style)"

[aws]
format = 'on [$symbol($profile )(\($region\) )]($style)'
style = 'bold blue'
symbol = "  "

[golang]
format = '[ ](bold cyan)'

[kubernetes]
symbol = '☸ '
disabled = false
detect_files = ['Dockerfile']
format = '[$context(\[$namespace\])]($style) '
[kubernetes.context_aliases]
'arn:aws:eks:us-west-2:577926974532:cluster/gal-kub-demo-cluster' = 'gal'

[docker_context]
disabled = true

[palettes.catppuccin_macchiato]
rosewater = "#f4dbd6"
flamingo = "#f0c6c6"
pink = "#f5bde6"
mauve = "#c6a0f6"
red = "#ed8796"
maroon = "#ee99a0"
peach = "#f5a97f"
yellow = "#eed49f"
green = "#a6da95"
teal = "#8bd5ca"
sky = "#91d7e3"
sapphire = "#7dc4e4"
blue = "#8aadf4"
lavender = "#b7bdf8"
text = "#cad3f5"
subtext1 = "#b8c0e0"
subtext0 = "#a5adcb"
overlay2 = "#939ab7"
overlay1 = "#8087a2"
overlay0 = "#6e738d"
surface2 = "#5b6078"
surface1 = "#494d64"
surface0 = "#363a4f"
base = "#24273a"
mantle = "#1e2030"
crust = "#181926"

[custom.stunnel]
when = "ps aux | grep stunnel | grep -v grep"
command = "ps -o etime= -p $(ps aux | grep stunnel | grep -v grep | awk '{print $2}')"
style = "red"
format = "[TUNNEL OPEN for $output]($style)"
